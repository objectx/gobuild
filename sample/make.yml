#
# sample build
#

variable:
# default
- {name: compiler,   value: "${tool_path}clang++"}
- {name: archiver,   value: "${tool_path}ar"}
- {name: archiver,   value: "${tool_path}llvm-ar", type: winclang}
- {name: archiver,   value: "${tool_path}llvm-ar", type: LINUX}
- {name: linker,     value: "${tool_path}clang++"}
- {name: compiler.c, value: "${tool_path}clang"}
- {name: packager,   value: "cp"}

- {name: execute_suffix, value: ".elf"}
- {name: tool_suffix,    value: ".exe", type: winclang}

# for Linux clang
- {name: tool_path, value: "/opt/clang/bin/", type: LINUX}

# for windows clang
- {name: tool_path, value: "c:/Program Files/LLVM/bin/", type: winclang}

# text -> c execute
- name: txt2c
  value: $txt2c -o $out $in
# test2c tool build
- name: txt2c_go
  value: go build -o $out${tool_suffix} $in

- name: VC_PATH
  value: c:/Program Files (x86)/Microsoft Visual Studio 14.0/VC
- name: MS_SDK
  value: c:/Program Files (x86)/Microsoft SDKs/Windows/v7.1A
- name: WK_PATH
  value: c:/Program Files (x86)/Windows Kits/10
- name: WK_VERSION
  value: 10.0.14393.0/ucrt

# not default rules
other:
- ext: .c
  command: compiler.c @include @option -o $out $in
  description: Compile C
  need_depend: true
  option:
  - list: [ c, g, Wall, MMD, MT $out, MF $dep ]
    debug: [ DDEBUG, O0 ]
    release: [ O2 ]

# include settings
include:
- list: [ ./include, ./data ]
- type: winclang
  list:
  - ${VC_PATH}/include
  - ${WK_PATH}/Include/${WK_VERSION}
  - ${MS_SDK}/Include

# option settings
option:
- list: [ c, g, std=c++14, Wall, Werror, MMD, MT $out, MF $dep ]
  debug:
  - O0
  release:
  - O2

# define lists
define:
- list:
  - USERNAME=\""${USERNAME}\""
- target: test3
  list: [ TEST3 ]

# archiver options
archive_option:
- list: [ rc ]

# linker options
link_option:
- type: winclang
  list:
  - v
  - static
  - L${VC_PATH}/lib
  - L${WK_PATH}/Lib/${WK_VERSION}/x86
  - L${MS_SDK}/Lib
  - lstdc++

# source file list
source:
- target: test
  list:
  - test.cpp
  - sub/test_sub.cpp
  - $hello.c
- target: test2
  list:
  - test2.cpp
- target: test3
  list:
  - test2.cpp

# pre build rule
prebuild:
- name: hello.c
  command: txt2c
  source:
  - list:
    - hello.txt
- name: txt2c
  command: txt2c_go
  source:
  - list:
    - txt2c.go

# target define
target:
- name: test
  type: execute
  packager: { target: test.pkg }
- name: test2
  type: execute
- name: test3
  type: execute

# sub directories
subdir:
- list:
  - data

# end
